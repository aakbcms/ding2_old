<?php

/**
 * @file
 * Integration with nets easy payment.
 */

define('DING_DEBT_EASY_DEFAULT_TERMS_URL', 'payment/easy/terms');
define('DING_DEBT_EASY_DEFAULT_PRIVACY_URL', 'payment/easy/privacy');
define('DING_DEBT_EASY_CALLBACK_URL', 'payment/easy/callback');
define('DING_DEBT_EASY_CANCEL_URL', 'payment/easy/cancel');

/**
 * Implements hook_menu().
 */
function ding_debt_easy_menu() {
  $items = [];

  $items['admin/config/payment/ding_debt_easy'] = array(
    'title' => 'Nets easy payment settings',
    'description' => 'Configure Nets easy payment gateway.',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['ding_debt_easy_admin_settings_form'],
    'access arguments' => ['administer easy settings'],
    'type' => MENU_NORMAL_ITEM,
    'file' => 'includes/ding_debt_easy.admin.inc',
  );

  $items['admin/config/payment/ding_debt_easy/settings'] = array(
    'title' => 'Settings',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'file' => 'includes/ding_debt_easy.admin.inc',
  );

  $items['admin/config/payment/ding_debt_easy/reports'] = array(
    'title' => 'Reports',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'ding_debt_easy_admin_reports_form',
    'access arguments' => array('administer easy reports'),
    'file' => 'includes/ding_debt_easy.reports.inc',
  );

  $items['admin/config/payment/ding_debt_easy/mail'] = array(
    'title' => 'Mail',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'drupal_get_form',
    'page arguments' => ['ding_debt_easy_admin_mails_settings_form'],
    'access arguments' => array('administer easy reports'),
    'file' => 'includes/ding_debt_easy.admin.inc',
  );

  // Terms page.
  $items[DING_DEBT_EASY_DEFAULT_TERMS_URL] = [
    'title' => 'Terms and usage',
    'type' => MENU_CALLBACK,
    'page callback' => 'ding_debt_easy_terms_page',
    'access callback' => '_ding_debt_easy_pages_access_callback',
    'access arguments' => array('terms'),
    'file' => 'includes/ding_debt_easy.pages.inc',
  ];

  // Privacy and cookie page.
  $items[DING_DEBT_EASY_DEFAULT_PRIVACY_URL] = [
    'title' => 'Privacy and cookies',
    'type' => MENU_CALLBACK,
    'page callback' => 'ding_debt_easy_privacy_page',
    'access callback' => '_ding_debt_easy_pages_access_callback',
    'access arguments' => array('privacy'),
    'file' => 'includes/ding_debt_easy.pages.inc',
  ];

  // Payment completed (callback).
  $items[DING_DEBT_EASY_CALLBACK_URL] = [

  ];

  // Payment canceled
  $items[DING_DEBT_EASY_CANCEL_URL] = [

  ];

  return $items;
}

/**
 * Implements hook_permission().
 */
function ding_debt_easy_permission() {
  return array(
    'administer easy settings' => array(
      'title' => t('Administer ding dept easy module'),
      'description' => t('Change Nets easy integration settings.'),
    ),
    'administer easy reports' => array(
      'title' => t('Administer payment reports'),
      'description' => t('Access easy payment reports'),
    ),
  );
}

/**
 * Implements hook_flush_caches().
 */
function ding_debt_easy_flush_caches() {
  return ['cache_ding_debt_easy'];
}

/**
 * Access callback with redirect for content pages generated by the module.
 *
 * @param string $type
 *   The type of page.
 *
 * @return bool
 *   True if the page should be accessed.
 */
function _ding_debt_easy_pages_access_callback(string $type) {
  $config = variable_get('ding_debt_easy_' . $type, []);

  // Redirect to page outside this module if given in configuration.
  if (!empty($config['url'])) {
    drupal_goto($config['url']);
  }

  return TRUE;
}

/**
 * The currencies available at the payment gateway.
 *
 * Sadly there is not end-point to fetches these. So it's created based on
 * https://nets-devs.isotop.se/nets-easy/en-EU/api/#currency-and-amount.
 *
 * @return string[]
 *   Array indexed by short name for currencies.
 */
function _ding_debt_easy_get_currency_options() {
  return [
    'DKK' => 'Danish krone',
    'EUR' => 'Euro',
    'GBP' => 'Pound sterling',
    'NOK' => 'Norwegian krone',
    'SEK' => 'Swedish krona',
    'USD' => 'United States dollar',
  ];
}

/**
 * Get current configured currency (default: DKK).
 *
 * @return string
 *   The short name for the currently configured currency.
 */
function ding_debt_easy_get_currency() {
  $config = variable_get('ding_debt_easy_config', []);
  return empty($config['currency']) ? 'DKK' : $config['currency'];
}

/**
 * The list of language select at the gateway.
 *
 * See https://nets-devs.isotop.se/nets-easy/en-EU/api/#localization.
 *
 * @return string[]
 *   List of languages keys by localization id/code.
 */
function _ding_debt_easy_get_localization_options() {
  return [
    'da-DK' => 'Danish',
    'en-GB' => 'English',
    'nl-NL' => 'Dutch',
    'fi-FI' => 'Finnish',
    'fr-FR' => 'French',
    'de-DE' => 'German',
    'nb-NO' => 'Norwegian',
    'pl-PL' => 'Polish',
    'es-ES' => 'Spanish',
    'sk-SK' => 'Slovak',
    'sv-SE' => 'Swedish',
  ];
}

/**
 * Get current localization id/code.
 *
 * @return string
 *   Current selected localization land id/code.
 */
function ding_debt_easy_get_localization() {
  $config = variable_get('ding_debt_easy_config', []);
  return empty($config['lang']) ? 'da-DK' : $config['lang'];
}

/**
 * Get list of integration types.
 *
 * Currently, the embedded type is not implemented, but it's very possible to do so.
 *
 * @return string[]
 *   List of integration types.
 */
function _ding_debt_easy_get_integration_type_options() {
  return [
    'HostedPaymentPage' => 'Hosted Payment Page',
    'EmbeddedCheckout' => 'Embedded Checkout (not implemented)',
  ];
}

/**
 * Get list of the configured payments types.
 *
 * @param bool $with_logos
 *   If TRUE the array is enriched with paths to logos.
 *
 * @return array
 *   Keyed by payment method.
 */
function ding_debt_easy_get_payment_types($with_logos = TRUE) {
  $cards = [];
  $config = variable_get('ding_debt_easy_config', []);
  if (!empty($config['cards'])) {
    $cards = array_filter($config['cards']);

    if ($with_logos) {
      // Update options with links to the logos.
      $supported_cards = _ding_debt_easy_get_payment_types_options();
      foreach ($cards as $card) {
        $cards[$card] = $supported_cards[$card];
      }
    }
  }

  return $cards;
}

/**
 * Get list of card supports by Net easy.
 *
 * Note the invoice methods have be removed.
 *
 * @return string[]
 *   List of supported cards as keys linked to logos.
 */
function _ding_debt_easy_get_payment_types_options() {
  $cards = [
    'Dankort' => 'dankort.png',
    'MasterCard' => 'mastercard.png',
    'MobilePay' => 'mobilpay.png',
    'PayPal' => 'paypal.png',
    'Swish' => 'swish.png' ,
    'Vipps' => 'vipps.png',
    'Visa' => 'visa.png',
  ];

  $path = '/' . drupal_get_path('module', 'ding_debt_easy') . '/img/';
  array_walk($cards, function (&$value, $key) use ($path) {
    $value = $path . $value;
  });

  return $cards;
}
